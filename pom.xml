<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>ElementSample</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <!-- Project Dependencies -->

        <!--
        With Elements 3.3 and higher, the Element must provide the SPI in the distribution. Currently, the only SPI we
        provide is the Guice based SPI and it contains some specifics which wire up the services within the Element
        itself.
        -->

        <dependency>
            <groupId>dev.getelements.elements</groupId>
            <artifactId>sdk-spi</artifactId>
            <version>${elements.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.getelements.elements</groupId>
            <artifactId>sdk-spi-guice</artifactId>
            <version>${elements.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.getelements.elements</groupId>
            <artifactId>sdk-logback</artifactId>
            <version>${elements.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.getelements.elements</groupId>
            <artifactId>sdk-local-maven</artifactId>
            <version>${elements.version}</version>
        </dependency>

        <!-- Provided Dependencies -->
        <dependency>
            <groupId>dev.getelements.elements</groupId>
            <artifactId>sdk-local</artifactId>
            <version>${elements.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.websocket</groupId>
            <artifactId>jakarta.websocket-api</artifactId>
            <version>${jakarta.websocket.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Swagger Core for Jakarta namespace -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-jakarta</artifactId>
            <version>${swagger.version}</version>

            <!-- Avoid conflicts with parent dependencies -->
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Annotations like @Operation, @Schema. Provided by Elements Core -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations-jakarta</artifactId>
            <version>${swagger.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Programmatic configuration and contexts -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-integration-jakarta</artifactId>
            <version>${swagger.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>namazu-crossfire</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>dev.getelements.elements.crossfire</groupId>
                    <artifactId>element</artifactId>
                    <version>${crossfire.version}</version>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

    <build>
        <plugins>

            <!--
            The new SDK loader will automatically copy the dependencies of the Element to an expected path on disk
            where it will be loaded in an isolated classpath similar to how the Element is loaded in the production
            environment.

            When deploying the Element, the dependencies will are all copied neatly to the `element-libs` directory
            where they can be deployed alongside the Element JAR file or compiled classes.
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>copy-element-deps</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>provided</excludeScope>
                            <excludeGroupIds>ch.qos.logback</excludeGroupIds>
                            <excludeArtifactIds>sdk-local,sdk-local-maven,sdk-logback</excludeArtifactIds>
                            <outputDirectory>${project.build.directory}/element-libs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <properties>
        <swagger.version>2.2.22</swagger.version>
        <rs.api>4.0.0</rs.api>
        <guice.version>7.0.0</guice.version>
        <elements.version>3.4.12</elements.version>
        <crossfire.version>1.0.2</crossfire.version>
        <servlet.api>6.1.0</servlet.api>
        <logback.version>1.2.3</logback.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <jakarta.websocket.version>2.1.0</jakarta.websocket.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

</project>
